# ___X_CMD_ENV_VERSION_CONFIG="
# java=1.1
# node=1.2
# python=1.3
# "


___x_cmd_env_prepare(){
    local i
    env:info "env prepare: $*"

    for i in "$@"; do
        if ! x pkg install "${i%=*}" "${i#*=}"; then
            env:error "Cannot install package: $i"
            return 1;
        fi
    done
}

___x_cmd_env_try(){
    local pkg_name
    local version
    local tgt

    for i in "$@"; do
    pkg_name="${i%=*}"
    version="${i#*=}"
    tgt="$___X_CMD_PKG_INSTALL_PATH/$pkg_name/$version"

    if [ ! -e $tgt ]; then
        ___x_cmd_env_prepare >/dev/null "$@" || return
    fi
    done

    ___x_cmd_env___var_add "$@"
}

___x_cmd_env_use(){
    ___x_cmd_env_try "$@"

    local backup="$___X_CMD_ENV_VERSION_CONFIG"
    if [ -f "$___X_CMD_ENV_VERSION_CONFIG_PATH" ]; then
        ___X_CMD_ENV_VERSION_CONFIG="$(cat "$___X_CMD_ENV_VERSION_CONFIG_PATH")"
    else
        ___X_CMD_ENV_VERSION_CONFIG=""
    fi

    ___X_CMD_ENV___VAR_ADD_NO_SETUP=1 ___x_cmd_env___var_add "$@"
    ___x_cmd_env_config_save

    ___X_CMD_ENV_VERSION_CONFIG="$backup"
}

___x_cmd_env_exec()(
    local arg
    local s
    for arg in "$@"; do
        case "$arg" in
            *=*)        s="$s $arg" ;;
            *)          break
        esac
    done
    eval ___x_cmd_env_use "$s" && "$@"
)
