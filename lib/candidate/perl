# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263    # xrc
# Section: ls remote
. "$___X_CMD_ROOT_MOD/jawk"
alias ja=___x_cmd_jawk

___x_cmd_env_perl_get_system_platform(){
    xrc os
    local _platform
    local _arch
    _platform="$(x os name)"
    _arch="$(x os arch)"
    case "$_platform" in
        linux)      ___X_CMD_ENV_PLATFORM=linux    ;;
        win)        ___X_CMD_ENV_PLATFORM=windows  ;;
        darwin)     ___X_CMD_ENV_PLATFORM=darwin   ;;
        *)          env_log error "your arch:(" "$(___x_cmd_os name)" ") are not supported"
                    return 1
                    ;;
    esac
}

___x_cmd_env_perl_ls_remote(){
    local cache_path="$___X_CMD_ENV_PATH/perl/cache/version_list"
    local cache_expiration=${2:-1}

      ___x_cmd_httpget "https://api.github.com/repos/skaji/relocatable-perl/releases" "$cache_path" "$cache_expiration" 2>/dev/null && \
       ja 'k()=="tag_name"{ print v(); }' < "$cache_path"
}
# EndSection

# Section: download
___x_cmd_env_perl_download_archive(){
    local version=${1:?Provide a version}
    local archive_path="$___X_CMD_ENV_PATH/perl/archive/perl-${version}.tar.gz"
    env_log info "Downloading perl-${version}"

	if ___x_cmd_env_util_is_archive_cached perl "$version" 2>/dev/null; then
		env_log info  "Archive existed: $version"
		return 0
	fi
    mkdir -p "$(dirname "${archive_path}")"
    local archive_path=$___X_CMD_ENV_PATH/perl/archive/perl-${version}.tar.gz

    if ___x_cmd_env_perl_get_system_platform ; then
        if [ "$___X_CMD_ENV_PLATFORM" = "linux" ] ; then
           download_url="https://github.com/skaji/relocatable-perl/releases/download/${version}/perl-x86_64-linux.tar.gz"
        fi
        if [ "$___X_CMD_ENV_PLATFORM" = "darwin" ] ; then
           download_url="https://github.com/skaji/relocatable-perl/releases/download/${version}/perl-darwin-2level.tar.gz"
        fi
    fi
    if ! curl --progress-bar --location --retry-max-time 10 --retry 0 "$download_url" --output "$archive_path" ; then
        env_log error "Download failure from $download_url"
        return 1
    fi
        env_log info "Download Successfully"

}
# EndSection

# Section: unpack

___x_cmd_env_perl_unpack(){
    local version="${1:?Provide a version}"
    env_log info "Unpacking: perl ${version}"
    local archive_path="$___X_CMD_ENV_PATH/perl/archive/perl-${version}.tar.gz"
    if [ "$___X_CMD_ENV_PLATFORM" = "linux" ] ; then
        archive_unpack_files="$(dirname "$archive_path")/perl-x86_64-linux"
    fi
    if [ "$___X_CMD_ENV_PLATFORM" = "darwin" ] ; then
        archive_unpack_files="$(dirname "$archive_path")/perl-darwin-2level"
    fi
	x uz "$archive_path" "$(dirname "$archive_path")"  1>/dev/null || return 1
    local versions_path="$___X_CMD_ENV_PATH/perl/versions"
	mkdir -p "${versions_path}/${version}"
	mv -f "$archive_unpack_files/"* "$versions_path/${version}"
	rm -rf "$archive_unpack_files"

}
# EndSection