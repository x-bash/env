# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section: Kotlin ls_remote

___x_cmd_env_kotlin_ls_remote(){
	local pattern="${1:-""}"
  	local cache_expiration="${2:-86400}"
	local cache_path="$___X_CMD_ENV_PATH/kotlin/cache/version_list"
	___x_cmd_httpget "https://api.sdkman.io/2/candidates/kotlin/LINUX64/versions/all" "$cache_path" "$cache_expiration" && \
	awk -v pattern="$pattern" 'BEGIN{ RS=","} {
		version = $0
		if (pattern == "" || index(version, pattern) > 0) {
			print version
		}
	}' < "$cache_path" | ___x_cmd_env_common_sort_version | ___x_cmd_env_common_simplify_version

}

# EndSection

# Section: download

___x_cmd_env_kotlin_get_download_url(){
	local version=${1:?Provide a version}
	printf "https://github.com/JetBrains/kotlin/releases/download/v%s/kotlin-compiler-%s.zip" "${version}" "${version}"
}

# EndSection

# Section: ui_catsel

#TODO: Should be optimized
___x_cmd_env_kotlin_ui_catsel(){
    case "$#" in
        0)	___x_cmd_env_kotlin_ls_remote | awk '{ split($0,arr,"."); vmap[arr[1]]=1 } END{ for(key in vmap){print key} }' ;;
        1)	___x_cmd_env_kotlin_ls_remote | awk '{ split($0,arr,"."); vmap[arr[2]]=1 } END{ for(key in vmap){print key} }' ;;
		2)	___x_cmd_env_kotlin_ls_remote | grep "$1" | grep "$2" | awk -v a="$1" -v b="$2" '{ split($0,arr,a"."b"."); if(arr[1]=="" && arr[2]!=""){ vmap[$0]=1 } } END{ for(key in vmap){ print key } }';;
    esac
}

# EndSection