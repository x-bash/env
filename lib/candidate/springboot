# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section: Springboot ls_remote

___x_cmd_env_springboot_ls_remote(){
    local pattern="${1:-""}"
    local cache_expiration="${2:-86400}"
    local cache_path="$___X_CMD_ENV_PATH/springboot/cache/version_list"
    ___x_cmd_httpget "https://repo.spring.io/ui/api/v1/ui/nativeBrowser/release/org/springframework/boot/spring-boot-cli" "$cache_path" "$cache_expiration" &&\
    awk -v pattern="$pattern" 'match($0,/"[.-9]+(RELEASE)?[0-9A-Z.]+?/){
        version = substr($0,RSTART+1, RLENGTH-1)
        if (pattern == "" || index(version, pattern) > 0) {
            print version
        }
    } ' < "$cache_path" \
        | ___x_cmd_env_common_sort_version | ___x_cmd_env_common_simplify_version
}

# EndSection

# Section: download

___x_cmd_env_springboot_get_download_url(){
    local version="${1:?Provide a version}"
    printf "https://repo.spring.io/simple/release/org/springframework/boot/spring-boot-cli/%s/spring-boot-cli-%s-bin.zip" "${version}" "${version}"
}

# EndSection

# Section: unpack
___x_cmd_env_sbt_get_compression(){
    printf 'zip'
}

___x_cmd_env_springboot_copy_to_unpackdir(){
    local version="${1:?Provide a version}"
    mv -f "${archive_path%/*}/spring-$version/"* "$unpack_dir"
}

# EndSection

# Section: current

___x_cmd_env_springboot_current(){
    ___x_cmd_env_common_current spring
}

# EndSection

# Section: ui_catsel

#TODO: Should be optimized
___x_cmd_env_springboot_ui_catsel(){
    case "$#" in
        0)  ___x_cmd_env_springboot_ls_remote | awk '{ split($0,arr,"."); vmap[arr[1]]=1 } END{ for(key in vmap){print key} }' ;;
        1)  ___x_cmd_env_springboot_ls_remote | awk '{ split($0,arr,"."); vmap[arr[2]]=1 } END{ for(key in vmap){print key} }'  ;;
		2)  ___x_cmd_env_springboot_ls_remote | grep "$1" | grep "$2" | awk -v a="$1" -v b="$2" '{ split($0,arr,a"."b"."); if(arr[1]=="" && arr[2]!=""){ vmap[$0]=1 } } END{ for(key in vmap){ print key } }' ;;
    esac
}

# EndSection