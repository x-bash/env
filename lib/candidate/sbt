# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section: sbt ls_remote
___x_cmd_env_sbt_get_version_info(){
    awk -v pattern="$pattern" 'match($0,/sbt [0-9.]+/) {
        version = substr($0,RSTART+4,RLENGTH-1)
        if (pattern == "" || index(version, pattern) > 0) {
            print version
        }
    }'
}

___x_cmd_env_sbt_get_list_url(){
    printf "https://www.scala-sbt.org/download.html"
}

# EndSection

# Section: sbt download_archive
___x_cmd_env_sbt_download_archive(){
    local version="${1:?Provide a version}"
    if ___x_cmd_env_util_is_archive_cached sbt "$version" 2>/dev/null; then
		env:info  "Archive existed: $version"
		return 0
	fi
    local archive_path="$___X_CMD_ENV_PATH/sbt/archive/sbt-${version}.tgz"
    mkdir -p "$(dirname "${archive_path}")"
    local download_url="https://github.com/sbt/sbt/releases/download/v${version}/sbt-${version}.tgz"
    env:info "Downloading sbt ${download_url}"
    if ! curl --progress-bar --location --retry-max-time 10 --retry 0 "${download_url}" --output "${archive_path}"; then
		env:info "Download failure"
		return 1
	fi
    env:info "Download completed $download_url"
}
# EndSection

# Section: sbt unpack

___x_cmd_env_sbt_get_compression(){
    printf 'tgz'
}

# EndSection