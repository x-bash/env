# shellcheck shell=sh disable=SC2039,SC1090,SC3043,SC2263,SC2120    # xrc

# Section: sdkman utils

# TODO: TO handle armv7l and windows
___X_CMD_ENV_SDK_PLATFORM="$(printf "%s%s" "$(x os name)" "$(x os arch)" | tr '[:lower:]' '[:upper:]' )"

__sdkman_echo_debug() {
	env:debug "$1"
}

__sdkman_echo() {
	printf "\033[1;%s\033[0m\n" "$1$2"
}

__sdkman_echo_red() {
	__sdkman_echo "31m" "$1"
}

__sdkman_echo_no_colour() {
	printf "%s\n" "$1"
}

__sdkman_echo_yellow() {
	__sdkman_echo "33m" "$1"
}

__sdkman_echo_green() {
	__sdkman_echo "32m" "$1"
}

__sdkman_echo_cyan() {
	__sdkman_echo "36m" "$1"
}

# EndSection

# Section: Java ls_remote

___x_cmd_env_java_get_list_url() {
    printf "https://api.sdkman.io/2/candidates/%s/%s/versions/all" \
        "$candidate" "$___X_CMD_ENV_SDK_PLATFORM"
}

___x_cmd_env_java_get_version_info(){
    awk -v pattern="$pattern" 'BEGIN{ RS=","} ($0 ~ pattern) { print $0 }'
}

# EndSection

# Section: download, unpack

___x_cmd_env_java_download_archive(){
   ___x_cmd_env_sdk_download_archive java "$@"
}

___x_cmd_env_sdk_download_archive(){
	local candidate="${1:?Provide canddidate}"
    local version="${2:?Provide a version}"
	if ___x_cmd_env_util_is_archive_cached "$candidate" "$version" 2>/dev/null; then
        env:info "Archive existed: $version"
        return 0
    fi

	mkdir -p "$___X_CMD_ENV_PATH/$candidate/tmp"

	local base_name="$candidate-${version}"
	local zip_archive_target="$___X_CMD_ENV_PATH/$candidate/archive/${base_name}.zip"
    mkdir -p "${zip_archive_target%/*}"

	export local binary_input="$___X_CMD_ENV_PATH/$candidate/tmp/${base_name}.bin"
	export local zip_output="$___X_CMD_ENV_PATH/$candidate/tmp/$base_name.zip"

	env:info "Downloading: $candidate ${version}"
	env:info "In progress..."

	# download binary
	local download_url="https://api.sdkman.io/2/broker/download/$candidate/${version}/${___X_CMD_ENV_SDK_PLATFORM}"
	curl --progress-bar --location --retry-max-time 10 --retry 0 "${download_url}" --output "${binary_input}"
	env:debug "Downloaded binary to: ${binary_input} "

	local post_installation_hook="$___X_CMD_ENV_PATH/$candidate/tmp/hook_post_${candidate}_${version}.sh"

	env:debug "Get post-installation hook: https://api.sdkman.io/2/hooks/post/$candidate/${version}/${___X_CMD_ENV_SDK_PLATFORM}"
	curl --silent --location "https://api.sdkman.io/2/hooks/post/$candidate/${version}/${___X_CMD_ENV_SDK_PLATFORM}" > "$post_installation_hook"
	env:debug "Copy remote post-installation hook: ${post_installation_hook}"
	. "$post_installation_hook"
	__sdkman_post_installation_hook || return 1
	env:debug "Processed binary as: $zip_output"
	env:debug "Completed post-installation hook..."

	mv -f "$zip_output" "$zip_archive_target"

	env:debug "Moved to archive folder: $zip_archive_target"
	env:info "Download complete $candidate $version"
}

# EndSection

# Section: ui_catsel

#TODO: Should be optimized
___x_cmd_env_java_ui_catsel(){
    case "$#" in
        0)  ___x_cmd_env_java_ls_remote | awk '{ split($0,arr,"-"); if(arr[2]!=""){ vmap[arr[2]]=1 } } END{ for(key in vmap){print key} }' ;;
        1)  ___x_cmd_env_java_ls_remote | grep "$1" | awk '{ split($0,arr,"."); vmap[arr[1]]=1 } END{ for(key in vmap){print key} }' ;;
        2)  ___x_cmd_env_java_ls_remote | grep "$1" | grep ^"$2" | awk '{ print $1 }' ;;
    esac
}

# EndSection