
# ___x_cmd_env_activate(){
#     local i
#     for i in "$@"; do
#         if x pkg activated "$i"; then
#             pkg:error "Not activated: $i"
#             return 1
#         fi

#         if x pkg installed "$i"; then
#             pkg:error "Not installed: $i"
#             return 1
#         fi
#     done

#     for i in "$@"; do
#         x pkg activate "$i"
#     done
# }

# ___x_cmd_env_deactivate(){
#     local i
#     for i in "$@"; do
#         if ! x pkg activated "$i"; then
#             pkg:error "Not activated: $i"
#             return 1
#         fi
#     done

#     for i in "$@"; do
#         x pkg activate "$i"
#     done
# }

___x_cmd_env_pkg_activate(){
    while [ $# -gt 0 ]; do
        local pkg_name="${1%=*}"
        ! ___x_cmd_pkg_activated_version_ || x list ":$___X_CMD_ENV_PKG_STACK_${pkg_name}" push "$___X_CMD_PKG_ACTIVATED_VERSION_"
        ___x_cmd_pkg_activate "$i"
        shift
    done
}

___x_cmd_env_pkg_deactivate(){
    while [ $# -gt 0 ]; do
        local pkg_name="${i%=*}"
        ___x_cmd_env_deactivate "$i"
        x list ":$___X_CMD_ENV_PKG_STACK_${pkg_name}" pop_
        ___x_cmd_pkg_dectivate "${pkg_name}=$___X_CMD_LIST_POP_"
        shift
    done
}

___x_cmd_env_var_set(){
    local val
    eval val="\"\$$1\"" || return 1
    x list ":$___X_CMD_ENV_VAR_$1" push "$val"
    eval "$1=\"$2\""
}

___x_cmd_env_var_recover(){
    while [ $# -gt 0 ]; do
        x list ":$___X_CMD_ENV_VAR_$1" pop_
        eval "$1=\"\$$___X_CMD_ENV_VAR_$1\""
        shift
    done
}