# shellcheck shell=sh disable=SC3043,SC2164     # xrc

# author:       Li Junhao           l@x-cmd.com
# license:      GPLv3

xrc param
param_type  env  candidates_list  "=" "python" "java" "node"

# TODO:
# alias
# unalias
# rehash
# whence

# Inject the environment.
___x_cmd_env() {
    param:scope     "env"
    param:dsl <<A
subcommands:
    ls                      "list all installed environments"
    la                      "list all available environments"
    download                "Download environment"
    install                 "Install environment"
    uninstall               "Remove environment"
    try                     "Set default environment in this shell session"
    use                     "Set global default environment"
    ws                      "Set workspace default environment"

    current                 "Show current environment"
    which                   "Display path of environment installed"

    exec                    "Run an executable with the selected candidates version"
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        ___x_cmd_env help
        return 1
    fi

    "___x_cmd_env_$PARAM_SUBCMD" "$@"
}

# Section: Subcommands

___x_cmd_env_install() {
    param:scope "env"
    param:dsl <<A
options:
    #1        "Environment Candidates" <candidates>:candidates_list
    #2        "Version"                <version>=""    =~ "[0-9]+\.[0-9]+\.[0-9]+"
A
    param:run

    if [ -z "$PARAM_SUBCMD" ]; then
        ___x_cmd_env_install help
        return 1
    fi
}

# EndSection


# Section: Candidate API

___x_cmd_env_op_candidate(){
    local op="${1:?Provide op}";  shift
    local candidate="${1:?Provide candidate}";  shift

    if ! ___x_cmd_env_candidate_has "$candidate"; then
        printf "Candidate inexisted: %s\n" "$candidate" >&2
        return 1
    fi

    xrc "env/lib/candidate/$candidate"

    "___x_cmd_env_${candidate}_${op}" "$@"
}


___x_cmd_env_candidate_all(){
    printf "%s" "
python
node
go
java
kotlin
"

}

# FIXME: Some bug
___x_cmd_env_candidate_has(){
    local target="${1:?Provide target}"
    local s="$(___x_cmd_env_candidate_all)"
    if [ "$s" = "${s#
$target
}" ]; then
        return 0
    fi
    return 1
}

# EndSection

xrc setmain ___x_cmd_env
